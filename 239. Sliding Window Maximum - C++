/*
 * Using Map concept, which will do the sort
 * keep track of number of repeated number and erase it if it is 0.
 */

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int size =  nums.size();
        vector <int> ans;
        int prev, cur_max = INT_MIN;
        //boundary check
        if (size <= 0 || size < k) return ans;
        if (k == 1) return nums;
       
        map<int, int> max_map; 
        for (int i = 0; i< k; i++) {
            max_map[nums[i]]++;
        } 
        ans.push_back(max_map.rbegin()->first);
        
        for (int i = k ; i < size; i++) {
             max_map[nums[i-k]]--;
             if (max_map[nums[i-k]] == 0) {
                 max_map.erase(nums[i-k]);
             }
             max_map[nums[i]]++;
             ans.push_back(max_map.rbegin()->first);
        
        }
        return ans;
    }
};
