/*
Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3, t = 0
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1, t = 2
Output: true
Example 3:

Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false
*/
class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {

        map<long long,int> n_map;
        int j = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (i - j > k ) {
                n_map.erase(nums[j]);
                j++;
            }
        
            auto temp = n_map.lower_bound((long long)nums[i]-t);
            if (temp != n_map.end() && abs((temp->first) -nums[i]) <=t) {
                return true;
            }
            n_map[nums[i]] = i;
        
        }
        return false;
        
    }
};
