/*
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
*/
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        if (nums.size() == 0) return res;
        
        sort(nums.begin(), nums.end());
        
        int length = nums.size();
        
        if (nums[0] > 0 || nums[length-1] < 0) return res;
        
        for (int i = 0 ; i < length - 2; i++ ) {
            if (nums[i] > 0) break;
            if ( (i > 0) && (nums[i] == nums[i-1])) continue;
            int b = i+1;
            int e = length -1;
            int target = 0 - nums[i];
            
            while (b < e) {
                if ( (nums[b] + nums[e]) == target) {
                    res.push_back({nums[i],nums[b], nums[e]});
                    while ((b < e) && (nums[b] == nums[b+1])) b++;
                    while ((b < e) && (nums[e] == nums[e-1])) e--;
                    b++;
                    e--;
                
                } else if ( (nums[b] + nums[e]) < target) {
                    b++;
                } else {
                    e--;
                }
                
            }
            
        }
        
        return res;
        
    }
};
