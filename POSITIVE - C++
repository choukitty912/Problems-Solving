/*
Given an unsorted integer array, find the first missing positive integer.

Example:

Given [1,2,0] return 3,

[3,4,-1,1] return 2,

[-8, -7, -6] returns 1

Your algorithm should run in O(n) time and use constant space.*/
int Solution::firstMissingPositive(vector<int> &A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    int size = A.size();
    for (int i = 0 ; i < size ; i++) {
        while (A[i] >0 && A[i] <size && A[i] != (i+1) && A[i] != A[A[i]-1]) {
            swap(A[i],A[A[i]-1]);
        }
    }
    
    for (int i = 0; i <size; i++) {
        
        if (A[i] != i+1) return i+1;
    }
    
    return size+1;
    
}
