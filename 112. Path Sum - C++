/*Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

Note: A leaf is a node with no children.

Example:

Given the below binary tree and sum = 22,

      5
     / \
    4   8
   /   / \
  11  13  4
 /  \      \
7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.
*/
class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
        if (!root) return false;
        int cur_sum = sum;
        return (helper_sum(root, cur_sum));
    }
    
    bool helper_sum (TreeNode *root, int &sum) {
        if (!root) {
            if (sum == 0) return true;
            return false;
        }
        int cur_sum = sum-root->val;
        if (root->left && !root->right) return helper_sum(root->left,cur_sum);
        if (!root->left && root->right) return helper_sum(root->right,cur_sum);                                              
                                                          
        return (helper_sum(root->left,cur_sum) || helper_sum(root->right,cur_sum));
             
    }
};
