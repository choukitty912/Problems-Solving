/*
Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

Example 1:

Input: "3+2*2"
Output: 7
Example 2:

Input: " 3/2 "
Output: 1
Example 3:

Input: " 3+5 / 2 "
Output: 5
*/
class Solution {
public:
    int calculate(string s) {
        stack <int> num;
        int flag = 1;
        int sum  = 0 ;
        int cur = 0;
        char op = '+';
        
        int size = s.size();
        for (int i = 0; i < size; i++) {
            if (s[i]>='0' && s[i]<='9') {
                cur = cur *10 + s[i]-'0';
            }
            if (s[i] == '-' || s[i] == '+' || s[i] == '*' || s[i] =='/' || i == size -1) {
               if (op == '-' || op == '+')  {
                   num.push(cur * ((op == '+') ? 1 :-1));
                   
               }
               if (op == '/' || op == '*') {
                   int temp = num.top();
                   num.pop();
                   if ( op == '*') {
                      num.push(temp*cur);
                   } else {
                       num.push(temp/cur);
                   }
                  
               }
               op = s[i];
                cur = 0;
               
            }
        }
        while (!num.empty()) {
          
            sum = sum+num.top();
            num.pop();
        }
        return sum;
        
    }
};
