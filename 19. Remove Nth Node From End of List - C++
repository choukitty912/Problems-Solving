/*
Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:

Given n will always be valid.
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if (!head) return NULL;
        
        ListNode*dummy;
        dummy = new ListNode(0);
        
        dummy->next = head;
        
        ListNode *slow = dummy, *fast = dummy;
        ListNode *prev = slow;
        int count = 0;
        while(fast ) {
            if (count <n) {
                fast = fast->next;
                count++;
            } else {
                fast = fast->next;
                prev = slow;
                slow = slow->next;
            }
        }
        
        prev->next = slow->next;
        head = dummy->next;
        delete(dummy);
        return head;
        
    }
};
