/*
Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
*/
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if (nums.size() == 0 ) return 0;       
        int res = nums[0], pro_max = nums[0], pro_min = nums[0];
        
        for (int i = 1; i < nums.size(); i++) {
            int mmin= pro_min, mmax = pro_max;
            pro_max = max(nums[i] * mmax, max(nums[i], nums[i]*mmin));
            pro_min = min(nums[i]* mmax, min(nums[i], nums[i]*mmin));
           
            res = max(pro_max, res);
        }
        
        return res;
    }
};
